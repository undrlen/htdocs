<?php
 namespace UmiCms\System\Import\UmiDump\Demolisher\Type;use UmiCms\System\Import\UmiDump\Demolisher;class Registry extends Demolisher {private $registry;private $keyBlackList = [   self::MODULES_PATH,   self::EXTENSION_PATH,   'settings',   'umiMessages'  ];private $keyPartBlackList = [   'default_method',   'default_method_admin',   'config',   'per_page'  ];const MODULES_PATH = 'modules';const EXTENSION_PATH = 'extensions';public function __construct(\iRegedit $va9205dcfd4a6f7c2cbe8be01566ff84a) {$this->registry = $va9205dcfd4a6f7c2cbe8be01566ff84a;}protected function execute() {$va9205dcfd4a6f7c2cbe8be01566ff84a = $this->getRegistry();foreach ($this->getPathList() as $vd6fe1d0be6347b8ef2427fa629c04485) {if (!$va9205dcfd4a6f7c2cbe8be01566ff84a->contains($vd6fe1d0be6347b8ef2427fa629c04485) || $this->isForbidden($vd6fe1d0be6347b8ef2427fa629c04485)) {$this->pushLog(sprintf('Registry path "%s" was ignored', $vd6fe1d0be6347b8ef2427fa629c04485));continue;}$va9205dcfd4a6f7c2cbe8be01566ff84a->delete($vd6fe1d0be6347b8ef2427fa629c04485);$this->pushLog(sprintf('Registry path "%s" was deleted', $vd6fe1d0be6347b8ef2427fa629c04485));}}private function isForbidden($vd6fe1d0be6347b8ef2427fa629c04485) {$vd6fe1d0be6347b8ef2427fa629c04485 = trim($vd6fe1d0be6347b8ef2427fa629c04485, '/');if (in_array($vd6fe1d0be6347b8ef2427fa629c04485, $this->keyBlackList)) {return true;}foreach ($this->keyPartBlackList as $ve5d26af6b8e1bde61b161ee21e22796c) {if (contains($vd6fe1d0be6347b8ef2427fa629c04485, $ve5d26af6b8e1bde61b161ee21e22796c)) {return true;}}if (!contains($vd6fe1d0be6347b8ef2427fa629c04485, self::MODULES_PATH) && !contains($vd6fe1d0be6347b8ef2427fa629c04485, self::EXTENSION_PATH)) {return false;}$v78f0805fa8ffadabda721fdaf85b3ca9 = explode('/', $vd6fe1d0be6347b8ef2427fa629c04485);if (umiCount($v78f0805fa8ffadabda721fdaf85b3ca9) > 2) {return false;}if ($this->getRegistry()->contains($vd6fe1d0be6347b8ef2427fa629c04485)) {return true;}return false;}private function getPathList() {return $this->getNodeValueList('/umidump/registry/key/@path');}private function getRegistry() {return $this->registry;}}