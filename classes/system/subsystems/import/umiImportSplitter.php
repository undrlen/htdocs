<?php
 abstract class umiImportSplitter implements iUmiImportSplitter {private static $importers;protected $offset = 0;protected $block_size = 10;protected $type = '';protected $file_path = false;protected $complete = false;public $ignoreParentGroups = true;public $autoGuideCreation = false;public $renameFiles = false;abstract protected function readDataBlock();final public static function get($v851f5ac9941d720844d143ed9cfcf60a) {$v1bc49dba86c5074c5266c6d38c301a46 = self::loadWrapper($v851f5ac9941d720844d143ed9cfcf60a);if ($v1bc49dba86c5074c5266c6d38c301a46 instanceof self) {return $v1bc49dba86c5074c5266c6d38c301a46;}throw new publicException("Can't load splitter for type \"{$v851f5ac9941d720844d143ed9cfcf60a}\"");}public function translate(DOMDocument $vfdc3bdefb79cec8eb8211d2499e04704) {$v66f6181bcb4cff4cd38fbc804a036db6 = CURRENT_WORKING_DIR . '/xsl/import/' . $this->type . '.xsl';if (!is_file($v66f6181bcb4cff4cd38fbc804a036db6)) {throw new publicException("Can't load translator {$v66f6181bcb4cff4cd38fbc804a036db6}");}$v640eac53ad75db5c49a9ec86390d8530 = umiTemplater::create('XSLT', $v66f6181bcb4cff4cd38fbc804a036db6);return $v640eac53ad75db5c49a9ec86390d8530->parse($vfdc3bdefb79cec8eb8211d2499e04704);}public function __construct($v599dcce2998a6b40b1e38e8c6006cb0a) {$this->type = $v599dcce2998a6b40b1e38e8c6006cb0a;}private static function loadWrapper($v851f5ac9941d720844d143ed9cfcf60a) {if (isset(self::$importers[$v851f5ac9941d720844d143ed9cfcf60a])) {return self::$importers[$v851f5ac9941d720844d143ed9cfcf60a];}self::$importers[$v851f5ac9941d720844d143ed9cfcf60a] = false;$v6f66e878c62db60568a3487869695820 = "{$v851f5ac9941d720844d143ed9cfcf60a}Splitter";if (!class_exists($v6f66e878c62db60568a3487869695820)) {$v47826cacc65c665212b821e6ff80b9b0 = mainConfiguration::getInstance()      ->includeParam('system.kernel') . "subsystems/import/splitters/{$v6f66e878c62db60568a3487869695820}.php";if (!is_file($v47826cacc65c665212b821e6ff80b9b0)) {throw new publicException("Can't load splitter \"{$v47826cacc65c665212b821e6ff80b9b0}\" for \"{$v851f5ac9941d720844d143ed9cfcf60a}\" file type");}require $v47826cacc65c665212b821e6ff80b9b0;}if (!class_exists($v6f66e878c62db60568a3487869695820)) {throw new publicException("Splitter class \"{$v6f66e878c62db60568a3487869695820}\" not found");}$v1bc49dba86c5074c5266c6d38c301a46 = new $v6f66e878c62db60568a3487869695820($v851f5ac9941d720844d143ed9cfcf60a);if (!$v1bc49dba86c5074c5266c6d38c301a46 instanceof self) {throw new publicException("Splitter class \"{$v6f66e878c62db60568a3487869695820}\" should be instance of umiImportSplitter");}self::$importers[$v851f5ac9941d720844d143ed9cfcf60a] = $v1bc49dba86c5074c5266c6d38c301a46;return $v1bc49dba86c5074c5266c6d38c301a46;}public function load($v47826cacc65c665212b821e6ff80b9b0, $v480d1b61a0432d1319f7504a3d7318dd = 100, $v7a86c157ee9713c34fbd7a1ee40f0c5a = 0) {if (!is_file($v47826cacc65c665212b821e6ff80b9b0)) {throw new publicException("File {$v47826cacc65c665212b821e6ff80b9b0} does not exist.");}$this->block_size = (int) $v480d1b61a0432d1319f7504a3d7318dd;$this->offset = (int) $v7a86c157ee9713c34fbd7a1ee40f0c5a;$this->file_path = $v47826cacc65c665212b821e6ff80b9b0;}public function getIsComplete() {return $this->complete;}public function getXML() {$v9a09b4dfda82e3e665e31092d1c3ec8d = $this->readDataBlock();return $v9a09b4dfda82e3e665e31092d1c3ec8d ? $v9a09b4dfda82e3e665e31092d1c3ec8d->saveXML() : false;}public function getDocument() {return $this->readDataBlock();}public function getOffset() {return $this->offset;}public function getRenameFiles() {return (bool) $this->renameFiles;}public function getIgnoreParentGroups() {return $this->ignoreParentGroups;}public function getAutoGuideCreation() {return $this->autoGuideCreation;}}