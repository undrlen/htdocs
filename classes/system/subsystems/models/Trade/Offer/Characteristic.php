<?php
 namespace UmiCms\System\Trade\Offer;use \iUmiField as iField;use \iUmiObject as iObject;use UmiCms\System\Orm\Entity;use \iUmiObjectsCollection as iObjectFacade;class Characteristic extends Entity implements iCharacteristic {private $field;private $dataObject;private $objectFacade;public function __construct(iField $v06e3d36fa30cea095545139854ad1fb9, iObjectFacade $v51bee6c1b54168126341d69a43ba7429) {$this->field = $v06e3d36fa30cea095545139854ad1fb9;$this->objectFacade = $v51bee6c1b54168126341d69a43ba7429;}public function getId() {return $this->getField()->getId();}public function setId($vb80bb7740288fda1f201890375a60c8f) {throw new \ErrorException('Forbidden operation');}public function getName() {return $this->getField()->getName();}public function getTitle() {return $this->getField()->getTitle();}public function getFieldType() {return $this->getField()->getDataType();}public function getViewType() {switch ($this->getFieldType()) {case 'file' : {return 'file';}case 'img_file' : {return 'image';}case 'float' :    case 'int' : {return 'number';}case 'text' :    case 'wysiwyg' :    case 'string' : {return 'string';}case 'boolean' : {return 'bool';}case 'date' : {return 'date';}case 'tags' :    case 'relation' : {return 'relation';}default : {throw new \ErrorException(sprintf('Incorrect field type given "%s"', $this->getFieldType()));}}}public function isMultiple() {return $this->getField()->isMultiple();}public function getGuideId() {return $this->getField()->getGuideId();}public function getValue() {$v05d5e54af177d42e80ca02e20dada809 = $this->getRawValue();return $this->prepareOutputValue($v05d5e54af177d42e80ca02e20dada809);}public function getRawValue() {try {return $this->getDataObject()     ->getValue($this->getName());}catch (\expectObjectException $v42552b1f133f9f8eb406d4f306ea9fd1) {return $this->isMultiple() ? [] : null;}}public function setValue($v2063c1608d6e0baf80249c42e2be5804) {try {$this->getDataObject()     ->setValue($this->getName(), $v2063c1608d6e0baf80249c42e2be5804);}catch (\expectObjectException $v42552b1f133f9f8eb406d4f306ea9fd1) {}return $this;}public function hasDataObject() {return $this->dataObject instanceof iObject;}public function getDataObjectId() {try {return $this->getDataObject()->getId();}catch (\expectObjectException $v42552b1f133f9f8eb406d4f306ea9fd1) {return null;}}public function setDataObject(iObject $v7beebf4251f2ace3d8e03527fe1bf86e) {$this->dataObject = $v7beebf4251f2ace3d8e03527fe1bf86e;return $this;}public function getField() {return $this->field;}public function getProperty() {try {return $this->getDataObject()     ->getPropByName($this->getName());}catch (\expectObjectException $v42552b1f133f9f8eb406d4f306ea9fd1) {return null;}}private function prepareOutputValue($v2063c1608d6e0baf80249c42e2be5804) {switch (true) {case ($v2063c1608d6e0baf80249c42e2be5804 instanceof \iUmiDate) : {return $v2063c1608d6e0baf80249c42e2be5804->getFormattedDate('d.m.Y');}case ($v2063c1608d6e0baf80249c42e2be5804 instanceof \iUmiFile) : {return $v2063c1608d6e0baf80249c42e2be5804->getFilePath(true);}case ($this->getFieldType() == 'relation' && is_numeric($v2063c1608d6e0baf80249c42e2be5804)) : {return $this->getObjectName($v2063c1608d6e0baf80249c42e2be5804);}case ($this->getFieldType() == 'relation' && is_array($v2063c1608d6e0baf80249c42e2be5804)) : {$vb586e09ccdd309a0a18b5e0d5c2bfd02 = [];foreach ($v2063c1608d6e0baf80249c42e2be5804 as $vb80bb7740288fda1f201890375a60c8f) {$vb586e09ccdd309a0a18b5e0d5c2bfd02[] = $this->getObjectName($vb80bb7740288fda1f201890375a60c8f);}return implode(', ', $vb586e09ccdd309a0a18b5e0d5c2bfd02);}default : {return $v2063c1608d6e0baf80249c42e2be5804;}}}private function getObjectName($vb80bb7740288fda1f201890375a60c8f) {$va8cfde6331bd59eb2ac96f8911c4b666 = $this->getObjectFacade()->getObject($vb80bb7740288fda1f201890375a60c8f);return ($va8cfde6331bd59eb2ac96f8911c4b666 instanceof \iUmiObject) ? $va8cfde6331bd59eb2ac96f8911c4b666->getName() : '';}private function getDataObject() {if (!$this->hasDataObject()) {throw new \expectObjectException('Data object expected');}return $this->dataObject;}private function getObjectFacade() {return $this->objectFacade;}}