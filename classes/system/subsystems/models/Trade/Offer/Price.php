<?php
 namespace UmiCms\System\Trade\Offer;use UmiCms\System\Trade\iOffer;use UmiCms\System\Orm\Composite\Entity;use UmiCms\System\Trade\Offer\Price\iType;use UmiCms\System\Trade\Offer\Price\iCurrency;use UmiCms\System\Trade\Offer\Price\Currency\iFacade as iCurrencyFacade;class Price extends Entity implements iPrice {protected $value = 0.0;protected $offerId;protected $currencyId;protected $typeId;protected $isMain = false;private $currencyFacade;protected $offer;protected $currency;protected $type;public function getValue(iCurrency $v1af0389838508d7016a9841eb6273962 = null) {$v62542be3d6b87b86fd4883b1f2a588fa = $this->getCurrencyFacade();$vbbb3865b6d792bb5bac8c25fc7d9d5cc = $this->getCurrency();$vae9800cde14b1302ff6e55de5d4cf1b9 = $v1af0389838508d7016a9841eb6273962 ?: $v62542be3d6b87b86fd4883b1f2a588fa->getCurrent();return $v62542be3d6b87b86fd4883b1f2a588fa->calculate($this->value, $vbbb3865b6d792bb5bac8c25fc7d9d5cc, $vae9800cde14b1302ff6e55de5d4cf1b9);}public function setValue($v2063c1608d6e0baf80249c42e2be5804, iCurrency $v1af0389838508d7016a9841eb6273962 = null) {$v2063c1608d6e0baf80249c42e2be5804 = ($v2063c1608d6e0baf80249c42e2be5804 === 0) ? (float) $v2063c1608d6e0baf80249c42e2be5804 : $v2063c1608d6e0baf80249c42e2be5804;if (!is_float($v2063c1608d6e0baf80249c42e2be5804) || $v2063c1608d6e0baf80249c42e2be5804 < 0) {throw new \ErrorException('Incorrect trade offer price value given');}$v62542be3d6b87b86fd4883b1f2a588fa = $this->getCurrencyFacade();$vbbb3865b6d792bb5bac8c25fc7d9d5cc = $this->getCurrency();$v2d1a051d08de5bda8087c2f31fe97f58 = $v1af0389838508d7016a9841eb6273962 ?: $v62542be3d6b87b86fd4883b1f2a588fa->getCurrent();$v8e53b81347045435d983e45b4066a47f = $v62542be3d6b87b86fd4883b1f2a588fa->calculate($v2063c1608d6e0baf80249c42e2be5804, $v2d1a051d08de5bda8087c2f31fe97f58, $vbbb3865b6d792bb5bac8c25fc7d9d5cc);$v9b949032450c1dce56563ebd39a91d26 = round($v8e53b81347045435d983e45b4066a47f, 2);return $this->setDifferentValue('value', $v9b949032450c1dce56563ebd39a91d26);}public function getOfferId() {return $this->offerId;}public function setOfferId($vb80bb7740288fda1f201890375a60c8f) {if (!is_int($vb80bb7740288fda1f201890375a60c8f) || $vb80bb7740288fda1f201890375a60c8f <= 0) {throw new \ErrorException('Incorrect trade offer id for price given');}$this->offer = null;return $this->setDifferentValue('offerId', $vb80bb7740288fda1f201890375a60c8f);}public function getCurrencyId() {return $this->currencyId;}public function setCurrencyId($vb80bb7740288fda1f201890375a60c8f) {if (!is_int($vb80bb7740288fda1f201890375a60c8f) || $vb80bb7740288fda1f201890375a60c8f <= 0) {throw new \ErrorException('Incorrect trade offer price currency id given');}$this->currency = null;return $this->setDifferentValue('currencyId', $vb80bb7740288fda1f201890375a60c8f);}public function getTypeId() {return $this->typeId;}public function setTypeId($vb80bb7740288fda1f201890375a60c8f) {if (!is_int($vb80bb7740288fda1f201890375a60c8f) || $vb80bb7740288fda1f201890375a60c8f <= 0) {throw new \ErrorException('Incorrect trade offer price type id given');}$this->type = null;return $this->setDifferentValue('typeId', $vb80bb7740288fda1f201890375a60c8f);}public function isMain() {return $this->isMain;}public function setMain($v327a6c4304ad5938eaf0efb6cc3e53dc = true) {if (!is_bool($v327a6c4304ad5938eaf0efb6cc3e53dc)) {throw new \ErrorException('Incorrect trade offer price main flag given');}return $this->setDifferentValue('isMain', $v327a6c4304ad5938eaf0efb6cc3e53dc);}public function getOffer() {if ($this->offer === null) {$this->loadRelation(Price\iMapper::OFFER);}return $this->offer;}public function setOffer(iOffer $vd60db28d94d538bbb249dcc7f2273ab1) {return $this->setOfferId($vd60db28d94d538bbb249dcc7f2273ab1->getId())    ->setDifferentValue('offer', $vd60db28d94d538bbb249dcc7f2273ab1);}public function getCurrency() {if ($this->currency === null) {$this->loadRelation(Price\iMapper::CURRENCY);}return $this->currency;}public function setCurrency(iCurrency $v1af0389838508d7016a9841eb6273962) {return $this->setCurrencyId($v1af0389838508d7016a9841eb6273962->getId())    ->setDifferentValue('currency', $v1af0389838508d7016a9841eb6273962);}public function getType() {if ($this->type === null) {$this->loadRelation(Price\iMapper::TYPE);}return $this->type;}public function setType(iType $v599dcce2998a6b40b1e38e8c6006cb0a) {return $this->setTypeId($v599dcce2998a6b40b1e38e8c6006cb0a->getId())    ->setDifferentValue('type', $v599dcce2998a6b40b1e38e8c6006cb0a);}public function setCurrencyFacade(iCurrencyFacade $v00c169d5e8a598d3908199ef8c64c279) {$this->currencyFacade = $v00c169d5e8a598d3908199ef8c64c279;return $this;}private function getCurrencyFacade() {return $this->currencyFacade;}}