<?php
 namespace UmiCms\System\Hierarchy\Domain;use UmiCms\System\Request\Http\iRequest;class Detector implements iDetector {private $domainCollection;private $httpRequest;public function __construct(\iDomainsCollection $v0d771fa031fb27561ed207afa6cf9983, iRequest $v6077efae9efff6a52314c120a5048f03) {$this->domainCollection = $v0d771fa031fb27561ed207afa6cf9983;$this->httpRequest = $v6077efae9efff6a52314c120a5048f03;}public function detect() {$v577e4cbed0f715952cd3a7f893f65608 = $this->getRequestDomain();$v9d6e24ec78d309695833f4c9f8310d7a = $this->getDefaultDomain();switch (true) {case ($v577e4cbed0f715952cd3a7f893f65608 instanceof \iDomain) : {return $v577e4cbed0f715952cd3a7f893f65608;}case ($v9d6e24ec78d309695833f4c9f8310d7a instanceof \iDomain) : {return $v9d6e24ec78d309695833f4c9f8310d7a;}default : {throw new \coreException('Cannot detect current domain');}}}public function detectId() {return $this->detect()    ->getId();}public function detectHost() {return $this->detect()    ->getHost();}public function detectUrl() {return $this->detect()    ->getUrl();}private function getRequestDomain() {$v67b3dba8bc6778101892eb77249db32e = $this->getHttpRequest()    ->host();return $this->getDomainCollection()    ->getDomainByHost($v67b3dba8bc6778101892eb77249db32e);}private function getDefaultDomain() {return $this->getDomainCollection()    ->getDefaultDomain();}private function getDomainCollection() {return $this->domainCollection;}private function getHttpRequest() {return $this->httpRequest;}}