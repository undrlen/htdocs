<?php
 namespace UmiCms\System\Protection;class Encrypter implements iEncrypter {private $configuration;public function __construct(\iConfiguration $vccd1066343c95877b75b79d47c36bebe) {$this->setConfiguration($vccd1066343c95877b75b79d47c36bebe);}public function encrypt($vb45cffe084dd3d20d928bee85e7b0f21) {if (!is_string($vb45cffe084dd3d20d928bee85e7b0f21) || empty($vb45cffe084dd3d20d928bee85e7b0f21)) {throw new \ErrorException('Incorrect string for encryption given');}return base64_encode($this->encryptString($vb45cffe084dd3d20d928bee85e7b0f21));}public function decrypt($v5d82d510de4fb1e0b1a803f0f9685dc8) {if (!is_string($v5d82d510de4fb1e0b1a803f0f9685dc8) || empty($v5d82d510de4fb1e0b1a803f0f9685dc8)) {throw new \ErrorException('Incorrect string for decryption given');}return $this->encryptString(base64_decode($v5d82d510de4fb1e0b1a803f0f9685dc8));}private function encryptString($vb45cffe084dd3d20d928bee85e7b0f21) {$v5f4dcc3b5aa765d61d8327deb882cf99 = $this->getPassword();$vceb20772e0c9d240c75eb26b0e37abee = $this->getSalt();$v9b9e562da50bafd2fcfa8bd9239e02a9 = strlen($vb45cffe084dd3d20d928bee85e7b0f21);$ve068c2de26d760f20cf10afc4b87ef0f = $v5f4dcc3b5aa765d61d8327deb882cf99;$v05b048d7242cb7b8b57cfa3b1d65ecea = '';while (strlen($v05b048d7242cb7b8b57cfa3b1d65ecea) < $v9b9e562da50bafd2fcfa8bd9239e02a9) {$ve068c2de26d760f20cf10afc4b87ef0f = sha1($ve068c2de26d760f20cf10afc4b87ef0f . $vceb20772e0c9d240c75eb26b0e37abee, true);$v05b048d7242cb7b8b57cfa3b1d65ecea .= substr($ve068c2de26d760f20cf10afc4b87ef0f, 0, 8);}return $vb45cffe084dd3d20d928bee85e7b0f21 ^ $v05b048d7242cb7b8b57cfa3b1d65ecea;}private function getPassword() {return 'MakeUmiGreatAgain!';}private function getSalt() {return (string) $this->getConfiguration()    ->get('system', 'salt');}private function setConfiguration(\iConfiguration $vccd1066343c95877b75b79d47c36bebe) {$this->configuration = $vccd1066343c95877b75b79d47c36bebe;return $this;}private function getConfiguration() {return $this->configuration;}}