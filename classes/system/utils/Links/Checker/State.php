<?php
 namespace UmiCms\Classes\System\Utils\Links\Checker;class State implements iState {private $isComplete;private $offset;private $limit;public function __construct(array $v9ed39e2ea931586b6a985a6942ef573e) {if (!isset($v9ed39e2ea931586b6a985a6942ef573e[iState::LIMIT_KEY])) {throw new \wrongParamException('Cant detect limit');}$vaa9f73eea60a006820d0f8768bc8a3fc = $v9ed39e2ea931586b6a985a6942ef573e[iState::LIMIT_KEY];if (!isset($v9ed39e2ea931586b6a985a6942ef573e[iState::OFFSET_KEY])) {throw new \wrongParamException('Cant detect offset');}$v7a86c157ee9713c34fbd7a1ee40f0c5a = $v9ed39e2ea931586b6a985a6942ef573e[iState::OFFSET_KEY];if (!isset($v9ed39e2ea931586b6a985a6942ef573e[iState::COMPLETE_KEY])) {throw new \wrongParamException('Cant detect complete status');}$vf94c28463eca606eda684e34af8244cf = $v9ed39e2ea931586b6a985a6942ef573e[iState::COMPLETE_KEY];$this->setLimit($vaa9f73eea60a006820d0f8768bc8a3fc)    ->setOffset($v7a86c157ee9713c34fbd7a1ee40f0c5a)    ->setCompleteStatus($vf94c28463eca606eda684e34af8244cf);}public function setOffset($v7a86c157ee9713c34fbd7a1ee40f0c5a) {if (!is_numeric($v7a86c157ee9713c34fbd7a1ee40f0c5a)) {throw new \wrongParamException('Wrong offset given');}$this->offset = $v7a86c157ee9713c34fbd7a1ee40f0c5a;return $this;}public function getOffset() {if ($this->offset === null) {throw new \wrongParamException('You should set offset first');}return $this->offset;}public function setLimit($vaa9f73eea60a006820d0f8768bc8a3fc) {if (!is_numeric($vaa9f73eea60a006820d0f8768bc8a3fc)) {throw new \wrongParamException('Wrong limit given');}$this->limit = $vaa9f73eea60a006820d0f8768bc8a3fc;return $this;}public function getLimit() {if ($this->limit === null) {throw new \wrongParamException('You should set limit first');}return $this->limit;}public function setCompleteStatus($v9acb44549b41563697bb490144ec6258) {if (!is_bool($v9acb44549b41563697bb490144ec6258)) {throw new \wrongParamException('Wrong complete status given');}$this->isComplete = $v9acb44549b41563697bb490144ec6258;return $this;}public function isComplete() {if ($this->isComplete === null) {throw new \wrongParamException('You should set is complete status first');}return $this->isComplete;}public function export() {return [    iState::LIMIT_KEY => $this->getLimit(),    iState::OFFSET_KEY => $this->getOffset(),    iState::COMPLETE_KEY => $this->isComplete()   ];}}